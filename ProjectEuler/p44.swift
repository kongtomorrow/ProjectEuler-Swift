//
//  p44.swift
//  ProjectEuler
//
//  Created by Ken Ferry on 8/14/14.
//  Copyright (c) 2014 Understudy. All rights reserved.
//

import Foundation

extension Problems {
    func p44() -> Int {
        /*
        Pentagon numbers
        Problem 44
        
        Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
        
        1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
        
        It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
        
        Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
        */
        var bestDiff = Int.max
        var j = 2
        while pentagonalNum(j) - pentagonalNum(j-1) < bestDiff {
            let pj = pentagonalNum(j)
            for k in stride(from: j-1, through: 1, by: -1) {
                let pk = pentagonalNum(k)
                let diff = pj - pk
                if isPentagonalNum(diff) && isPentagonalNum(pj + pk) {
                    bestDiff = diff
                }
                if diff >= bestDiff {
                    break
                }
            }
            j++
        }
        return bestDiff
    }
}

